# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- adf_publish

pool:
  vmImage: windows-latest

steps:
- checkout: self
  persistCredentials: true
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure-Resource-Manager'
    ScriptType: 'InlineScript'
    Inline: |
      $configPath = "$(System.DefaultWorkingDirectory)/paramConfig-$(target-env).csv"
      $TemplateParamsPath = "$(System.DefaultWorkingDirectory)/$(src-datafactory-name)/ARMTemplateParametersForFactory.json"
      $paramsJson = (Get-Content $TemplateParamsPath)|ConvertFrom-Json
      $configObj = Import-Csv $configPath
      $paramList = $paramsJson.parameters|get-member -MemberType NoteProperty | select -ExpandProperty Name
      $configList = @()
      foreach ($i in $configObj)
      {
      $configList = $configList + $i.Name
      }
      $missing = 0
      Write-Host "*************************************"
      ForEach($param in $paramList)
      {
        if(-Not $configList.Contains($param.trim()))
        {
          $missing = 1
          Write-Host -ForegroundColor Red "$param,<value>"
        }
      }
      Write-Host "*************************************"
      If($missing -eq 1)
      {
        Write-Host "##vso[task.logissue type=error]add missing parameters to paramConfig-$(target-env).csv file."
      }
    azurePowerShellVersion: 'LatestVersion'
  displayName: "Check missing parameters in Config file"

- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure-Resource-Manager'
    ScriptType: 'InlineScript'
    Inline: |
      ###
           $configPath = "$(System.DefaultWorkingDirectory)/paramConfig-$(target-env).csv"
           $TemplateParamsPath = "$(System.DefaultWorkingDirectory)/$(src-datafactory-name)/ARMTemplateParametersForFactory.json"
           $newTemplateParamsPath = "$(System.DefaultWorkingDirectory)/ARMTemplateParametersForFactory_new.json"
           Write-Host "Path is :" $configPath
            
            $paramsRawtext = Get-Content -Path $TemplateParamsPath
           
           
           $paramsJsonStr = $paramsRawtext |ConvertFrom-Json 
           
           Write-Host "parameters: $paramsJsonStr.parameters"
           Write-Host "Params content $paramsJsonStr"
               $data = import-csv $configPath
               $outputParam = ""
               foreach($i in $data)
               {
                   $paramname =   $i.Name 
                   Write-Host "parameters: $paramsJsonStr.parameters"
                   if($paramsJsonStr.parameters.$paramname)
                   {
                   $paramsJsonStr.parameters.$paramname.value = $i.Value 
                   }
                   else
                   {
                    Write-Host "##vso[task.logissue type=warning] Remove $paramname from paramConfig-$(target-env).csv file."
                   }
           
               }
           
           $newParamsStr = $paramsJsonStr| ConvertTo-Json 
           $newParamsStr|Out-File -FilePath $TemplateParamsPath -Force
           Get-Content -path $TemplateParamsPath|Write-Host
    azurePowerShellVersion: 'LatestVersion'
  displayName: "Update Parameters Template"

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(system.defaultworkingdirectory)'
    Contents: |
      $(src-datafactory-name)/*.json
      pre_n_post_adf_deployment.ps1
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container' 
