
###################################################################################
##### @Description: ADO Pipeline for SQL script execution in Azure SQL Server #####
###################################################################################

trigger:
- develop
- staging
- main

pr: none

resources:
  repositories:
  - repository: devopstemplates
    type: github    
    name: 'BrewDat/brewdat-global-ghq-pltfrm-devops-repo'
    endpoint: github.com_SRV-GLOBAL-brewdat-platform

  - repository: appsectemplates
    type: git    
    name: DevSecOps/DevSecOps

variables:
- template: ../variables/sql-metadata-cicd-variables.yml

pool: 
  name: Brewdat-Bees
  demands: agent.name -equals $(bees-ado-agent-name)


stages:
- ${{ if and(or(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'IndividualCI')), eq(variables['Build.SourceBranch'], 'refs/heads/develop')) }}:
  - template: ado-templates/stages/sql/sql-script-execution.yml@devopstemplates
    parameters:
      Deploy_Environment: DEV
      Sql_Server: $(Sql_Server_DEV)
      Sql_DB_Name: $(Sql_DB_Name_DEV)
      Sql_Username: $(Sql_Username_DEV)
      Sql_Password: $(${{ variables.SQL_Secret_Name_DEV }})
      KeyVault_Name: $(KeyVault_Name_DEV)
      KeyVault_Secret: $(SQL_Secret_Name_DEV)


- ${{ if and(or(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'IndividualCI')), eq(variables['Build.SourceBranch'], 'refs/heads/staging')) }}:
  - template: ado-templates/stages/sql/sql-script-execution.yml@devopstemplates
    parameters:
      Deploy_Environment: QA
      Sql_Server: $(Sql_Server_QA)
      Sql_DB_Name: $(Sql_DB_Name_QA)
      Sql_Username: $(Sql_Username_QA)
      Sql_Password: $(${{ variables.SQL_Secret_Name_QA }})
      KeyVault_Name: $(KeyVault_Name_QA)
      KeyVault_Secret: $(SQL_Secret_Name_QA)


- ${{ if and(or(eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'IndividualCI')), eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
  - template: ado-templates/stages/sql/sql-script-execution.yml@devopstemplates
    parameters:
      Deploy_Environment: PROD
      Sql_Server: $(Sql_Server_PROD)
      Sql_DB_Name: $(Sql_DB_Name_PROD)
      Sql_Username: $(Sql_Username_PROD)
      Sql_Password: $(${{ variables.SQL_Secret_Name_PROD }})
      KeyVault_Name: $(KeyVault_Name_PROD)
      KeyVault_Secret: $(SQL_Secret_Name_PROD)


